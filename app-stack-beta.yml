version: '3'

services:
  provider:
   image: fint/provider:latest
   ports:
     - "8200:8080"
   environment:
    TZ: Europe/Oslo
    server.context-path: /administrasjon/personal/provider
    fint.events.orgIds: "fint.health"
    fint.events.component: beta
    fint.events.env: beta
    fint.events.redisson.addresses: "redis://redis:6379"
    fint.events.redisson.use-linux-native-epoll: "true"
    fint.events.reddison.dns-monitoring: "true"
    fint.audit.mongo.hostname: ucp.rogfk.no
    fint.audit.mongo.databasename: fint-audit-beta
   deploy:
    placement:
     constraints:
      - node.role == worker
    replicas: 1
    restart_policy:
     condition: on-failure
     delay: 5s
     max_attempts: 3
     window: 120s
   depends_on:
    - redis

  consumer:
   image: fint/consumer-personal:latest
   ports:
     - "8201:8080"
   environment:
    TZ: Europe/Oslo
    server.context-path: /administrasjon/personal
    fint.events.orgIds: "fint.health"
    fint.events.component: beta
    fint.events.env: beta
    fint.events.redisson.addresses: "redis://redis:6379"
    fint.events.redisson.use-linux-native-epoll: "true"
    fint.events.reddison.dns-monitoring: "true"
    fint.relations.default-base-url: "https://beta.felleskomponent.no"
    fint.audit.mongo.hostname: ucp.rogfk.no
    fint.audit.mongo.databasename: fint-audit-beta
   deploy:
    placement:
     constraints:
      - node.role == worker
    replicas: 1
    restart_policy:
     condition: on-failure
     delay: 5s
     max_attempts: 3
     window: 120s
   depends_on:
    - redis
    - provider

  health-adapter:
     image: fint/health-adapter:latest
     environment:
      TZ: Europe/Oslo
      springfox.title: "Health Adapter"
      fint.adapter.organizations: fint.health
      fint.adapter.sse-endpoint: https://beta.felleskomponent.no/administrasjon/personal/provider/sse/%s
      fint.adapter.status-endpoint: https://beta.felleskomponent.no/administrasjon/personal/provider/status
      fint.adapter.response-endpoint: https://beta.felleskomponent.no/administrasjon/personal/provider/response
     deploy:
      placement:
       constraints:
        - node.role == worker
      replicas: 1
      restart_policy:
       condition: on-failure
       delay: 5s
       max_attempts: 3
       window: 120s
     depends_on:
      - redis
      - provider

  redis:
    image: redis:3.2.8-alpine
    environment:
      TZ: Europe/Oslo
    deploy:
     placement:
      constraints:
       - node.role == worker
     replicas: 1
     restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 3
      window: 120s
